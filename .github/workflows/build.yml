name: Build BitchatX

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86_64
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-x86_64
            
          # Windows x86_64
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            name: windows-x86_64
            
          # macOS x86_64 (Intel)
          - target: x86_64-apple-darwin
            os: macos-latest
            name: macos-x86_64
            
          # macOS ARM64 (Apple Silicon)
          - target: aarch64-apple-darwin
            os: macos-latest
            name: macos-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Setup cache
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}

    # Install Windows cross-compilation tools on Ubuntu
    - name: Install Windows cross-compilation tools
      if: matrix.target == 'x86_64-pc-windows-gnu'
      run: |
        sudo apt update
        sudo apt install gcc-mingw-w64-x86-64

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Package binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        if [ "${{ matrix.target }}" = "x86_64-pc-windows-gnu" ]; then
          tar czf ../../../bitchatx-${{ matrix.name }}.tar.gz bitchatx.exe
        else
          tar czf ../../../bitchatx-${{ matrix.name }}.tar.gz bitchatx
        fi

    - name: Package binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ../../../bitchatx-${{ matrix.name }}.zip bitchatx.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bitchatx-${{ matrix.name }}
        path: |
          bitchatx-${{ matrix.name }}.tar.gz
          bitchatx-${{ matrix.name }}.zip
        if-no-files-found: ignore

  # Create release on tags
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bitchatx-*/bitchatx-*.tar.gz
          bitchatx-*/bitchatx-*.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}